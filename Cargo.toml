[package]
name = "zk-auctions"
version = "0.1.0"
edition = "2021"

[workspace]
members = [
    "core",
    "methods",
    "methods/auctioneer-verify",
    "methods/bidder-join", 
    "methods/bidder-prover",
    "methods/bidder-verify",
    "application"
]

[dependencies]
zk-auctions-core = { path = "core" }
zk-auctions-methods = { path = "methods" }
risc0-zkvm = { version = "1.2.2", default-features = false, features = ['std', 'getrandom', 'client', 'heap-embedded-alloc'] }
risc0-build = "1.2.2"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
serde = { version = "1.0", features = ["derive"] }
num-bigint = { version = "0.4.6", features = ["rand", "serde"]}
rand = "0.8.5"
rand_chacha = "0.3.1"
num-traits = "0.2.19"
sha2 = { git = "https://github.com/risc0/RustCrypto-hashes", tag = "sha2-v0.10.6-risczero.0" }
anyhow = "1.0"

## examples live under examples/, run with: cargo run --example <name>

[features]
cuda = ["risc0-zkvm/cuda"]
default = []
prove = ["risc0-zkvm/prove"]
