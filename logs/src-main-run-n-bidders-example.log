[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)     Compiling zk-auctions-methods v0.1.0 (/home/iskander/Projects/zk-auctions-archive/methods)
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)  warning: unused variable: `cipher_i_and`
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)     --> core/src/protocols/strain/bidder.rs:450:13
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)      |
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)  450 |         let cipher_i_and = embed_and(cipher_i, pub_key_j, rand1);
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)      |             ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cipher_i_and`
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)      |
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)      = note: `#[warn(unused_variables)]` on by default
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)  
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)  warning: unused variable: `number1`
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)     --> core/src/protocols/strain/bidder.rs:435:9
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)      |
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)  435 |         number1: &BigInt,
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)      |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_number1`
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)  
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)  warning: field `soundness_params` is never read
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)     --> core/src/protocols/strain/bidder.rs:139:5
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)      |
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)  137 | pub struct Bidder {
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)      |            ------ field in this struct
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)  138 |     config: StrainConfig,
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)  139 |     soundness_params: StrainSecurityParams,
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)      |     ^^^^^^^^^^^^^^^^
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)      |
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)      = note: `#[warn(dead_code)]` on by default
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)  
[2025-10-23 09:51:46] (+0.00 mins | took: 0.00 mins)  warning: `zk-auctions-core` (lib) generated 3 warnings
[2025-10-23 09:51:47] (+0.02 mins | took: 0.02 mins)     Compiling zk-auctions v0.1.0 (/home/iskander/Projects/zk-auctions-archive)
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  warning: unused variable: `p_i`
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)    --> src/host/mod.rs:81:23
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     |
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  81 |             let (n_i, p_i, q_i) = bidders_data.get(bidder_id).unwrap();
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     |                       ^^^ help: if this is intentional, prefix it with an underscore: `_p_i`
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     |
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     = note: `#[warn(unused_variables)]` on by default
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  warning: unused variable: `q_i`
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)    --> src/host/mod.rs:81:28
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     |
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  81 |             let (n_i, p_i, q_i) = bidders_data.get(bidder_id).unwrap();
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     |                            ^^^ help: if this is intentional, prefix it with an underscore: `_q_i`
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  warning: unused variable: `v_i`
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     --> src/host/mod.rs:185:50
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)      |
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  185 |                 let (bidder_i_id, n_i, c_i, r_i, v_i, p_i, q_i) = bidders[i].clone();
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)      |                                                  ^^^ help: if this is intentional, prefix it with an underscore: `_v_i`
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  warning: unused variable: `p_i`
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     --> src/host/mod.rs:185:55
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)      |
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  185 |                 let (bidder_i_id, n_i, c_i, r_i, v_i, p_i, q_i) = bidders[i].clone();
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)      |                                                       ^^^ help: if this is intentional, prefix it with an underscore: `_p_i`
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  warning: unused variable: `q_i`
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     --> src/host/mod.rs:185:60
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)      |
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  185 |                 let (bidder_i_id, n_i, c_i, r_i, v_i, p_i, q_i) = bidders[i].clone();
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)      |                                                            ^^^ help: if this is intentional, prefix it with an underscore: `_q_i`
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  warning: unused variable: `c_j`
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     --> src/host/mod.rs:186:40
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)      |
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  186 |                 let (bidder_j_id, n_j, c_j, r_j, v_j, p_j, q_j) = bidders[j].clone();
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)      |                                        ^^^ help: if this is intentional, prefix it with an underscore: `_c_j`
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  warning: unused variable: `bidder_i_id`
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     --> src/host/mod.rs:222:27
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)      |
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  222 |         let (bidder_j_id, bidder_i_id, result) = rx.recv().unwrap();
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)      |                           ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_bidder_i_id`
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  warning: field `proof_shuffle` is never read
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)    --> src/host/mod.rs:27:5
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     |
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  18 | pub struct BidderProveResult {
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     |            ----------------- field in this struct
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  ...
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  27 |     proof_shuffle: HashMap<u32, StrainProof>,
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     |     ^^^^^^^^^^^^^
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     |
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     = note: `BidderProveResult` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)     = note: `#[warn(dead_code)]` on by default
[2025-10-23 09:51:47] (+0.02 mins | took: 0.00 mins)  
[2025-10-23 09:51:48] (+0.03 mins | took: 0.02 mins)  warning: `zk-auctions` (bin "zk-auctions") generated 8 warnings
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)      Finished `release` profile [optimized] target(s) in 1.84s
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)       Running `target/release/zk-auctions`
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  ==================================================================================
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  ZERO-KNOWLEDGE AUCTION PROTOCOL - 4 PHASE IMPLEMENTATION
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  ==================================================================================
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  This implementation follows a 4-phase zero-knowledge auction protocol:
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  PHASE 1: BIDDERS JOIN
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - Each bidder generates GM keypair and encrypts their bid
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - Runs in parallel for efficiency
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - Output: (n_j, c_j, r_j, (p_j, q_j)) for each bidder
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  PHASE 2: BIDDER PROVE
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - Each bidder 'j' runs bidder_prove against bidder 'i'
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - 'j' = bidder running proof, 'i' = other bidder being compared
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - Generates zero-knowledge proofs of bid validity
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  PHASE 3: AUCTIONEER VERIFY
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - Auctioneer verifies all proof_eval from all bidders
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - Ensures all bidders provided valid zero-knowledge proofs
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - Auctioneer acts as trusted verifier
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  PHASE 4: BIDDER VERIFY ALL & WINNER DETERMINATION
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - Each bidder verifies other bidders' proofs using bidder_verify_all
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - Verifies proof_enc (encryption) and proof_dlog (discrete log)
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - Ensures mutual verification between bidders
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - Final bid comparison using compare_leq_honest
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - Determines winner by comparing against all other bidders
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)    - Runs in parallel for efficiency
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  ==================================================================================
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  Running Example 3: HTML Auction Simulation
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  ==================================================================================
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  HTML AUCTION SIMULATION - Interactive Web Interface
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  ==================================================================================
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  This example generates a static HTML file that simulates a real-life auction
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  application with the following features:
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  1. Welcome page with auction protocol information
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  2. Auction creation form with image upload and bidder count
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  3. Dynamic bidder registration forms
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  4. Interactive auction interface with logging
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  5. Winner announcement with results
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  The HTML file will be created in the project root directory.
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  ==================================================================================
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  HTML auction simulation created at: /home/iskander/Projects/zk-auctions-archive/auction_simulation.html
[2025-10-23 09:51:48] (+0.03 mins | took: 0.00 mins)  Open the file in your web browser to run the simulation!
